generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // uses connection pooling
  directUrl = env("DIRECT_URL") // uses a direct connection
}

model Software {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  website     String?
  icon        String?
  category    Category      @relation(fields: [categoryId], references: [id])
  categoryId  Int
  tags        SoftwareTag[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  software Software[]
}

model Tag {
  id       Int           @id @default(autoincrement())
  name     String        @unique
  software SoftwareTag[]
}

model SoftwareTag {
  software   Software @relation(fields: [softwareId], references: [id], onDelete: Cascade)
  softwareId Int
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      Int

  @@id([softwareId, tagId])
}

model Topic {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(128)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  urls      Url[]
}

model Url {
  id          Int      @id @default(autoincrement())
  icon        String?  @db.VarChar(128)
  url         String   @db.VarChar(128)
  title       String   @db.VarChar(128)
  description String?  @db.VarChar(512)
  topic       Topic    @relation(fields: [topicId], references: [id])
  topicId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
